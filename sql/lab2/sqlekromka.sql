-- MySQL Script generated by MySQL Workbench
-- Fri Mar  7 15:08:08 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema E_kromka
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema E_kromka
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `E_kromka` ;
USE `E_kromka` ;

-- -----------------------------------------------------
-- Table `E_kromka`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Users` (
  `user_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `login` VARCHAR(50) NOT NULL,
  `password` VARCHAR(255) NOT NULL,
  `first_name` VARCHAR(50) NULL DEFAULT NULL,
  `last_name` VARCHAR(50) NULL DEFAULT NULL,
  `email` VARCHAR(100) NULL DEFAULT NULL,
  `phone` VARCHAR(20) NULL DEFAULT NULL,
  PRIMARY KEY (`user_id`),
  UNIQUE INDEX (`login` ASC) ,
  UNIQUE INDEX (`email` ASC) );


-- -----------------------------------------------------
-- Table `E_kromka`.`Addresses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Addresses` (
  `address_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `user_id` INT NULL DEFAULT NULL,
  `address` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`address_id`),
  INDEX (`user_id` ASC) ,
  CONSTRAINT `fk_addresses_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `E_kromka`.`Users` (`user_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Quizzes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Quizzes` (
  `quiz_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `quiz_name` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`quiz_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`QuizQuestions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`QuizQuestions` (
  `question_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `quiz_id` INT NULL DEFAULT NULL,
  `question_text` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`question_id`),
  INDEX (`quiz_id` ASC) ,
  CONSTRAINT `fk_quizquestions_quizzes`
    FOREIGN KEY (`quiz_id`)
    REFERENCES `E_kromka`.`Quizzes` (`quiz_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`QuizAnswers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`QuizAnswers` (
  `answer_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `question_id` INT NULL DEFAULT NULL,
  `answer_text` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`answer_id`),
  INDEX (`question_id` ASC) ,
  CONSTRAINT `fk_quizanswers_quizquestions`
    FOREIGN KEY (`question_id`)
    REFERENCES `E_kromka`.`QuizQuestions` (`question_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`UserQuizResults`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`UserQuizResults` (
  `result_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `user_id` INT NULL DEFAULT NULL,
  `quiz_id` INT NULL DEFAULT NULL,
  `result` VARCHAR(255) NULL DEFAULT NULL,
  `discount` DECIMAL(5,2) NULL DEFAULT NULL,
  PRIMARY KEY (`result_id`),
  INDEX (`user_id` ASC) ,
  INDEX (`quiz_id` ASC) ,
  CONSTRAINT `fk_userquizresults_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `E_kromka`.`Users` (`user_id`),
  CONSTRAINT `fk_userquizresults_quizzes`
    FOREIGN KEY (`quiz_id`)
    REFERENCES `E_kromka`.`Quizzes` (`quiz_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Categories`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Categories` (
  `category_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL DEFAULT NULL,
  `display_start_date` DATE NULL DEFAULT NULL,
  `display_end_date` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`category_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Products` (
  `product_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `price` DECIMAL(10,2) NULL DEFAULT NULL,
  `stock_quantity` INT NULL DEFAULT NULL,
  `category_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`product_id`),
  INDEX (`category_id` ASC) ,
  CONSTRAINT `fk_products_categories`
    FOREIGN KEY (`category_id`)
    REFERENCES `E_kromka`.`Categories` (`category_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Carts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Carts` (
  `cart_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `user_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`cart_id`),
  INDEX (`user_id` ASC) ,
  CONSTRAINT `fk_carts_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `E_kromka`.`Users` (`user_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`CartItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`CartItems` (
  `cart_item_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `cart_id` INT NULL DEFAULT NULL,
  `product_id` INT NULL DEFAULT NULL,
  `quantity` INT NULL DEFAULT NULL,
  PRIMARY KEY (`cart_item_id`),
  INDEX (`cart_id` ASC) ,
  INDEX (`product_id` ASC) ,
  CONSTRAINT `fk_cartitems_carts`
    FOREIGN KEY (`cart_id`)
    REFERENCES `E_kromka`.`Carts` (`cart_id`),
  CONSTRAINT `fk_cartitems_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `E_kromka`.`Products` (`product_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Orders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Orders` (
  `order_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `user_id` INT NULL DEFAULT NULL,
  `order_date` DATETIME NULL DEFAULT NULL,
  `total` DECIMAL(10,2) NULL DEFAULT NULL,
  `discount_code` VARCHAR(50) NULL DEFAULT NULL,
  `delivery_address` VARCHAR(255) NULL DEFAULT NULL,
  `delivery_method` VARCHAR(50) NULL DEFAULT NULL,
  `payment_method` VARCHAR(50) NULL DEFAULT NULL,
  `status` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`order_id`),
  INDEX (`user_id` ASC) ,
  CONSTRAINT `fk_orders_users`
    FOREIGN KEY (`user_id`)
    REFERENCES `E_kromka`.`Users` (`user_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`OrderItems`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`OrderItems` (
  `order_item_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `order_id` INT NULL DEFAULT NULL,
  `product_id` INT NULL DEFAULT NULL,
  `quantity` INT NULL DEFAULT NULL,
  `price` DECIMAL(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (`order_item_id`),
  INDEX (`order_id` ASC) ,
  INDEX (`product_id` ASC) ,
  CONSTRAINT `fk_orderitems_orders`
    FOREIGN KEY (`order_id`)
    REFERENCES `E_kromka`.`Orders` (`order_id`),
  CONSTRAINT `fk_orderitems_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `E_kromka`.`Products` (`product_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Invoices`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Invoices` (
  `invoice_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `order_id` INT NULL DEFAULT NULL,
  `invoice_date` DATETIME NULL DEFAULT NULL,
  `total` DECIMAL(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (`invoice_id`),
  INDEX (`order_id` ASC) ,
  CONSTRAINT `fk_invoices_orders`
    FOREIGN KEY (`order_id`)
    REFERENCES `E_kromka`.`Orders` (`order_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Employees` (
  `employee_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(50) NULL DEFAULT NULL,
  `last_name` VARCHAR(50) NULL DEFAULT NULL,
  `email` VARCHAR(100) NULL DEFAULT NULL,
  `phone` VARCHAR(20) NULL DEFAULT NULL,
  `position` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`employee_id`),
  UNIQUE INDEX (`email` ASC) );


-- -----------------------------------------------------
-- Table `E_kromka`.`Inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Inventory` (
  `inventory_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `product_id` INT NULL DEFAULT NULL,
  `quantity` INT NULL DEFAULT NULL,
  PRIMARY KEY (`inventory_id`),
  INDEX (`product_id` ASC) ,
  CONSTRAINT `fk_inventory_products`
    FOREIGN KEY (`product_id`)
    REFERENCES `E_kromka`.`Products` (`product_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Recipes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Recipes` (
  `recipe_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `instructions` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`recipe_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`ProcessingOrders`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`ProcessingOrders` (
  `processing_order_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `order_id` INT NULL DEFAULT NULL,
  `employee_id` INT NULL DEFAULT NULL,
  `status` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`processing_order_id`),
  INDEX (`order_id` ASC) ,
  INDEX (`employee_id` ASC) ,
  CONSTRAINT `fk_processingorders_orders`
    FOREIGN KEY (`order_id`)
    REFERENCES `E_kromka`.`Orders` (`order_id`),
  CONSTRAINT `fk_processingorders_employees`
    FOREIGN KEY (`employee_id`)
    REFERENCES `E_kromka`.`Employees` (`employee_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`RefrigeratorTemperatures`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`RefrigeratorTemperatures` (
  `temperature_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `date` DATETIME NULL DEFAULT NULL,
  `temperature` DECIMAL(5,2) NULL DEFAULT NULL,
  PRIMARY KEY (`temperature_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`SanitaryTasks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`SanitaryTasks` (
  `task_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `task_description` VARCHAR(255) NULL DEFAULT NULL,
  `is_completed` TINYINT NULL DEFAULT NULL,
  `completed_date` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`task_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`JobOffers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`JobOffers` (
  `job_offer_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `date_posted` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`job_offer_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`JobCandidates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`JobCandidates` (
  `candidate_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `job_offer_id` INT NULL DEFAULT NULL,
  `first_name` VARCHAR(50) NULL DEFAULT NULL,
  `last_name` VARCHAR(50) NULL DEFAULT NULL,
  `email` VARCHAR(100) NULL DEFAULT NULL,
  `phone` VARCHAR(20) NULL DEFAULT NULL,
  `resume` TEXT NULL DEFAULT NULL,
  `status` VARCHAR(50) NULL DEFAULT NULL,
  PRIMARY KEY (`candidate_id`),
  INDEX (`job_offer_id` ASC) ,
  CONSTRAINT `fk_jobcandidates_joboffers`
    FOREIGN KEY (`job_offer_id`)
    REFERENCES `E_kromka`.`JobOffers` (`job_offer_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`WebsiteGuidelines`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`WebsiteGuidelines` (
  `guideline_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  `date_created` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`guideline_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`WebsiteUpdates`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`WebsiteUpdates` (
  `update_id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `guideline_id` INT NULL DEFAULT NULL,
  `update_description` TEXT NULL DEFAULT NULL,
  `date_updated` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`update_id`),
  INDEX (`guideline_id` ASC) ,
  CONSTRAINT `fk_websiteupdates_websiteguidelines`
    FOREIGN KEY (`guideline_id`)
    REFERENCES `E_kromka`.`WebsiteGuidelines` (`guideline_id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Konta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Konta` (
  `id` INT NOT NULL,
  `login` VARCHAR(45) NOT NULL,
  `haslo` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC) )
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `E_kromka`.`Uzytkownicy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Uzytkownicy` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `imie` VARCHAR(40) NULL DEFAULT NULL,
  `nazwisko` VARCHAR(40) NULL DEFAULT NULL,
  `email` VARCHAR(40) NULL DEFAULT NULL,
  `telefon` VARCHAR(40) NULL DEFAULT NULL,
  `Konta_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX (`email` ASC) ,
  INDEX `fk_uzytkownicy_konta_idx` (`Konta_id` ASC) ,
  CONSTRAINT `fk_uzytkownicy_konta`
    FOREIGN KEY (`Konta_id`)
    REFERENCES `E_kromka`.`Konta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `E_kromka`.`Adresy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Adresy` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `uzytkownik_id` INT NULL DEFAULT NULL,
  `adres` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`uzytkownik_id` ASC) ,
  CONSTRAINT `fk_adresy_uzytkownicy`
    FOREIGN KEY (`uzytkownik_id`)
    REFERENCES `E_kromka`.`Uzytkownicy` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Quizy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Quizy` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(40) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`QuizPytania`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`QuizPytania` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `quiz_id` INT NOT NULL,
  `pytanie` TEXT NOT NULL,
  `zdjecie` BLOB NOT NULL,
  PRIMARY KEY (`id`),
  INDEX (`quiz_id` ASC) ,
  CONSTRAINT `fk_quizpytania_quizy`
    FOREIGN KEY (`quiz_id`)
    REFERENCES `E_kromka`.`Quizy` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`QuizOdpowiedzi`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`QuizOdpowiedzi` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `pytanie_id` INT NOT NULL,
  `odpowiedz` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX (`pytanie_id` ASC) ,
  CONSTRAINT `fk_quizodpowiedzi_quizpytania`
    FOREIGN KEY (`pytanie_id`)
    REFERENCES `E_kromka`.`QuizPytania` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`WynikiQuizow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`WynikiQuizow` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `uzytkownik_id` INT NOT NULL,
  `quiz_id` INT NOT NULL,
  `wynik` VARCHAR(40) NOT NULL,
  `znizka` DECIMAL(5,2) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX (`uzytkownik_id` ASC) ,
  INDEX (`quiz_id` ASC) ,
  CONSTRAINT `fk_wynikiquizow_uzytkownicy`
    FOREIGN KEY (`uzytkownik_id`)
    REFERENCES `E_kromka`.`Uzytkownicy` (`id`),
  CONSTRAINT `fk_wynikiquizow_quizy`
    FOREIGN KEY (`quiz_id`)
    REFERENCES `E_kromka`.`Quizy` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Kategorie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Kategorie` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(40) NULL DEFAULT NULL,
  `data_poczatku_wyswietlania` DATE NULL DEFAULT NULL,
  `data_konca_wyswietlania` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Przepisy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Przepisy` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(40) NULL DEFAULT NULL,
  `opis` TEXT NULL DEFAULT NULL,
  `instrukcje` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Produkty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Produkty` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `nazwa` VARCHAR(40) NULL DEFAULT NULL,
  `opis` TEXT NULL DEFAULT NULL,
  `cena` DECIMAL(10,2) NULL DEFAULT NULL,
  `ilosc_na_stanie` INT NULL DEFAULT NULL,
  `kategoria_id` INT NULL DEFAULT NULL,
  `Przepisy_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX (`kategoria_id` ASC) ,
  INDEX `fk_produkty_przepisy_idx` (`Przepisy_id` ASC) ,
  CONSTRAINT `fk_produkty_kategorie`
    FOREIGN KEY (`kategoria_id`)
    REFERENCES `E_kromka`.`Kategorie` (`id`),
  CONSTRAINT `fk_produkty_przepisy`
    FOREIGN KEY (`Przepisy_id`)
    REFERENCES `E_kromka`.`Przepisy` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `E_kromka`.`Koszyki`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Koszyki` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `uzytkownik_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`uzytkownik_id` ASC) ,
  CONSTRAINT `fk_koszyki_uzytkownicy`
    FOREIGN KEY (`uzytkownik_id`)
    REFERENCES `E_kromka`.`Uzytkownicy` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`PozycjeKoszyka`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`PozycjeKoszyka` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `koszyk_id` INT NULL DEFAULT NULL,
  `produkt_id` INT NULL DEFAULT NULL,
  `ilosc` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`koszyk_id` ASC) ,
  INDEX (`produkt_id` ASC) ,
  CONSTRAINT `fk_pozycjekoszyka_koszyki`
    FOREIGN KEY (`koszyk_id`)
    REFERENCES `E_kromka`.`Koszyki` (`id`),
  CONSTRAINT `fk_pozycjekoszyka_produkty`
    FOREIGN KEY (`produkt_id`)
    REFERENCES `E_kromka`.`Produkty` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Zamowienia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Zamowienia` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `uzytkownik_id` INT NULL DEFAULT NULL,
  `data_zamowienia` DATETIME NULL DEFAULT NULL,
  `suma` DECIMAL(10,2) NULL DEFAULT NULL,
  `kod_rabatowy` VARCHAR(40) NULL DEFAULT NULL,
  `adres_dostawy` VARCHAR(255) NULL DEFAULT NULL,
  `metoda_dostawy` VARCHAR(40) NULL DEFAULT NULL,
  `metoda_platnosci` VARCHAR(40) NULL DEFAULT NULL,
  `status` VARCHAR(40) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`uzytkownik_id` ASC) ,
  CONSTRAINT `fk_zamowienia_uzytkownicy`
    FOREIGN KEY (`uzytkownik_id`)
    REFERENCES `E_kromka`.`Uzytkownicy` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`PozycjeZamowienia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`PozycjeZamowienia` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `zamowienie_id` INT NULL DEFAULT NULL,
  `produkt_id` INT NULL DEFAULT NULL,
  `ilosc` INT NULL DEFAULT NULL,
  `cena` DECIMAL(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`zamowienie_id` ASC) ,
  INDEX (`produkt_id` ASC) ,
  CONSTRAINT `fk_pozycjezamowienia_zamowienia`
    FOREIGN KEY (`zamowienie_id`)
    REFERENCES `E_kromka`.`Zamowienia` (`id`),
  CONSTRAINT `fk_pozycjezamowienia_produkty`
    FOREIGN KEY (`produkt_id`)
    REFERENCES `E_kromka`.`Produkty` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Faktury`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Faktury` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `zamowienie_id` INT NULL DEFAULT NULL,
  `data_faktury` DATETIME NULL DEFAULT NULL,
  `suma` DECIMAL(10,2) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`zamowienie_id` ASC) ,
  CONSTRAINT `fk_faktury_zamowienia`
    FOREIGN KEY (`zamowienie_id`)
    REFERENCES `E_kromka`.`Zamowienia` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Pracownicy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Pracownicy` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `imie` VARCHAR(40) NULL DEFAULT NULL,
  `nazwisko` VARCHAR(40) NULL DEFAULT NULL,
  `email` VARCHAR(40) NULL DEFAULT NULL,
  `telefon` VARCHAR(40) NULL DEFAULT NULL,
  `stanowisko` VARCHAR(40) NULL DEFAULT NULL,
  `Konta_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX (`email` ASC) ,
  INDEX `fk_pracownicy_konta_idx` (`Konta_id` ASC) ,
  CONSTRAINT `fk_pracowicy_konta`
    FOREIGN KEY (`Konta_id`)
    REFERENCES `E_kromka`.`Konta` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `E_kromka`.`StanyMagazynowe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`StanyMagazynowe` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `produkt_id` INT NULL DEFAULT NULL,
  `ilosc` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`produkt_id` ASC) ,
  CONSTRAINT `fk_stanymagazynowe_produkty`
    FOREIGN KEY (`produkt_id`)
    REFERENCES `E_kromka`.`Produkty` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`ZamowieniaDoRealizacji`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`ZamowieniaDoRealizacji` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `zamowienie_id` INT NULL DEFAULT NULL,
  `pracownik_id` INT NULL DEFAULT NULL,
  `status` VARCHAR(40) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`zamowienie_id` ASC) ,
  INDEX (`pracownik_id` ASC) ,
  CONSTRAINT `fk_zamowieniadorealizacji_zamowienia`
    FOREIGN KEY (`zamowienie_id`)
    REFERENCES `E_kromka`.`Zamowienia` (`id`),
  CONSTRAINT ``
    FOREIGN KEY (`pracownik_id`)
    REFERENCES `E_kromka`.`Pracownicy` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`TemperaturyLodowek`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`TemperaturyLodowek` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `data` DATETIME NULL DEFAULT NULL,
  `temperatura` DECIMAL(5,2) NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`ZadaniaSanepidu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`ZadaniaSanepidu` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `opis` VARCHAR(255) NULL DEFAULT NULL,
  `wykonane` TINYINT NULL DEFAULT NULL,
  `data_wykonania` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`OfertyPracy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`OfertyPracy` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `tytul` VARCHAR(40) NULL DEFAULT NULL,
  `opis` TEXT NULL DEFAULT NULL,
  `data_opublikowania` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`Kandydaci`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`Kandydaci` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `oferta_pracy_id` INT NULL DEFAULT NULL,
  `imie` VARCHAR(40) NULL DEFAULT NULL,
  `nazwisko` VARCHAR(40) NULL DEFAULT NULL,
  `email` VARCHAR(40) NULL DEFAULT NULL,
  `telefon` VARCHAR(40) NULL DEFAULT NULL,
  `cv` TEXT NULL DEFAULT NULL,
  `status` VARCHAR(40) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`oferta_pracy_id` ASC) ,
  CONSTRAINT `fk_kandydaci_ofertypracy`
    FOREIGN KEY (`oferta_pracy_id`)
    REFERENCES `E_kromka`.`OfertyPracy` (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`WytyczneStrony`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`WytyczneStrony` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `tytul` VARCHAR(40) NULL DEFAULT NULL,
  `opis` TEXT NULL DEFAULT NULL,
  `data_utworzenia` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `E_kromka`.`AktualizacjeStrony`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `E_kromka`.`AktualizacjeStrony` (
  `id` INT NULL DEFAULT NULL AUTO_INCREMENT,
  `wytyczna_id` INT NULL DEFAULT NULL,
  `opis_aktualizacji` TEXT NULL DEFAULT NULL,
  `data_aktualizacji` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX (`wytyczna_id` ASC) ,
  CONSTRAINT `fk_aktualizacjestrony_wytycznestrony`
    FOREIGN KEY (`wytyczna_id`)
    REFERENCES `E_kromka`.`WytyczneStrony` (`id`));


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
